---
# tasks file for ansible-role-pam

- name: template pam.d system-auth
  template: src=system-auth.j2 dest=/etc/pam.d/system-auth
            owner=root group=root mode=0644
  when: pam_enabled|bool

- name: template pam.d password-auth
  template: src=system-auth.j2 dest=/etc/pam.d/password-auth
            owner=root group=root mode=0644
  when: pam_enabled|bool

- name: template /etc/security/namespace.conf
  template: src=site.conf.j2 dest=/etc/security/namespace.conf
            owner=root group=root mode=0644
  when: pam_enabled|bool

- name: lineinfile add admin groups to /etc/security/access.conf
  lineinfile: 'dest="/etc/security/access.conf"
              regexp="(^\+\:{{ item }}\:ALL$)"
              line="+:{{ item }}:ALL"'
  register: reg_slurm_access_conf
  with_items: "{{ slurm_access_groups }}"
  when: pam_enabled|bool and pam_enable_slurm|bool

- name: lineinfile deny all at the end of /etc/security/access.conf
  lineinfile: 'dest="/etc/security/access.conf"
               regexp="(^\-\:ALL\:ALL$)"
               line="-:ALL:ALL"
               insertafter="EOF"'
  when: reg_slurm_access_conf is success and pam_enabled|bool and pam_enable_slurm|bool

# remove first tailing slash if there and then take the dirname to get parent dir path as item
- name: Ensure pam namespace parent directories exist
  ansible.builtin.file:
    dest: "{{ item | regex_replace('^(.*)/$', '\\1') | dirname }}"
    state: directory
    mode: 'u=rwx,g=rx,o=rx'
  when: pam_use_namespace is defined
  loop:
    - "{{ pam_tmp_inst_dir }}"
    - "{{ pam_var_tmp_inst_dir }}"
